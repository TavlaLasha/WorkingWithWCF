//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Suppliers", Namespace="http://schemas.datacontract.org/2004/07/WorkingWithWcfService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Suppliers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrssField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HmPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PstCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RgnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Addrss {
            get {
                return this.AddrssField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrssField, value) != true)) {
                    this.AddrssField = value;
                    this.RaisePropertyChanged("Addrss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cntry {
            get {
                return this.CntryField;
            }
            set {
                if ((object.ReferenceEquals(this.CntryField, value) != true)) {
                    this.CntryField = value;
                    this.RaisePropertyChanged("Cntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompName {
            get {
                return this.CompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompNameField, value) != true)) {
                    this.CompNameField = value;
                    this.RaisePropertyChanged("CompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContName {
            get {
                return this.ContNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContNameField, value) != true)) {
                    this.ContNameField = value;
                    this.RaisePropertyChanged("ContName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContTitle {
            get {
                return this.ContTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContTitleField, value) != true)) {
                    this.ContTitleField = value;
                    this.RaisePropertyChanged("ContTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ct {
            get {
                return this.CtField;
            }
            set {
                if ((object.ReferenceEquals(this.CtField, value) != true)) {
                    this.CtField = value;
                    this.RaisePropertyChanged("Ct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fx {
            get {
                return this.FxField;
            }
            set {
                if ((object.ReferenceEquals(this.FxField, value) != true)) {
                    this.FxField = value;
                    this.RaisePropertyChanged("Fx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HmPage {
            get {
                return this.HmPageField;
            }
            set {
                if ((object.ReferenceEquals(this.HmPageField, value) != true)) {
                    this.HmPageField = value;
                    this.RaisePropertyChanged("HmPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phn {
            get {
                return this.PhnField;
            }
            set {
                if ((object.ReferenceEquals(this.PhnField, value) != true)) {
                    this.PhnField = value;
                    this.RaisePropertyChanged("Phn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PstCode {
            get {
                return this.PstCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PstCodeField, value) != true)) {
                    this.PstCodeField = value;
                    this.RaisePropertyChanged("PstCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rgn {
            get {
                return this.RgnField;
            }
            set {
                if ((object.ReferenceEquals(this.RgnField, value) != true)) {
                    this.RgnField = value;
                    this.RaisePropertyChanged("Rgn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.ICatalogManagement")]
    public interface ICatalogManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/GetSupplier", ReplyAction="http://tempuri.org/ICatalogManagement/GetSupplierResponse")]
        WindowsFormsApp1.ServiceReference2.Suppliers GetSupplier(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/GetSupplier", ReplyAction="http://tempuri.org/ICatalogManagement/GetSupplierResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference2.Suppliers> GetSupplierAsync(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/GetAllSuppliers", ReplyAction="http://tempuri.org/ICatalogManagement/GetAllSuppliersResponse")]
        WindowsFormsApp1.ServiceReference2.Suppliers[] GetAllSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/GetAllSuppliers", ReplyAction="http://tempuri.org/ICatalogManagement/GetAllSuppliersResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference2.Suppliers[]> GetAllSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/AddSupplier", ReplyAction="http://tempuri.org/ICatalogManagement/AddSupplierResponse")]
        void AddSupplier(string compname, string contName, string contTitle, string addrss, string ct, string rgn, string pstCode, string cntry, string phn, string fx, string hmPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/AddSupplier", ReplyAction="http://tempuri.org/ICatalogManagement/AddSupplierResponse")]
        System.Threading.Tasks.Task AddSupplierAsync(string compname, string contName, string contTitle, string addrss, string ct, string rgn, string pstCode, string cntry, string phn, string fx, string hmPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/DeleteSupplier", ReplyAction="http://tempuri.org/ICatalogManagement/DeleteSupplierResponse")]
        void DeleteSupplier(int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogManagement/DeleteSupplier", ReplyAction="http://tempuri.org/ICatalogManagement/DeleteSupplierResponse")]
        System.Threading.Tasks.Task DeleteSupplierAsync(int supplierId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatalogManagementChannel : WindowsFormsApp1.ServiceReference2.ICatalogManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogManagementClient : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReference2.ICatalogManagement>, WindowsFormsApp1.ServiceReference2.ICatalogManagement {
        
        public CatalogManagementClient() {
        }
        
        public CatalogManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WindowsFormsApp1.ServiceReference2.Suppliers GetSupplier(int supplierId) {
            return base.Channel.GetSupplier(supplierId);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference2.Suppliers> GetSupplierAsync(int supplierId) {
            return base.Channel.GetSupplierAsync(supplierId);
        }
        
        public WindowsFormsApp1.ServiceReference2.Suppliers[] GetAllSuppliers() {
            return base.Channel.GetAllSuppliers();
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp1.ServiceReference2.Suppliers[]> GetAllSuppliersAsync() {
            return base.Channel.GetAllSuppliersAsync();
        }
        
        public void AddSupplier(string compname, string contName, string contTitle, string addrss, string ct, string rgn, string pstCode, string cntry, string phn, string fx, string hmPage) {
            base.Channel.AddSupplier(compname, contName, contTitle, addrss, ct, rgn, pstCode, cntry, phn, fx, hmPage);
        }
        
        public System.Threading.Tasks.Task AddSupplierAsync(string compname, string contName, string contTitle, string addrss, string ct, string rgn, string pstCode, string cntry, string phn, string fx, string hmPage) {
            return base.Channel.AddSupplierAsync(compname, contName, contTitle, addrss, ct, rgn, pstCode, cntry, phn, fx, hmPage);
        }
        
        public void DeleteSupplier(int supplierId) {
            base.Channel.DeleteSupplier(supplierId);
        }
        
        public System.Threading.Tasks.Task DeleteSupplierAsync(int supplierId) {
            return base.Channel.DeleteSupplierAsync(supplierId);
        }
    }
}
